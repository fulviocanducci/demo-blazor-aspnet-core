@page "/mercadolibre/search"
@inject HttpClient Http

<h1>Product Search on Mercado Libre</h1>

<p>This component demonstrates fetching data from a 3rd party API.</p>

<p>
    <form>
        <div class="form-group">
            <label for="query" class="control-label">Query</label>
            <input name="query" class="form-control" bind="@querySearch" />
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary" onclick="@Search">Search</button>
        </div>
    </form>
</p>
@if (searchResult != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Site</th>
                <th>Title</th>
                <th>Condition</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in searchResult.results)
            {
                <tr>
                    <td><a href="@item.permalink" target="_blank">View</a></td>
                    <td>@item.site_id</td>
                    <td>@item.title</td>
                    <td>@item.condition</td>
                    <td>R$ @item.price</td>
                </tr>
            }
        </tbody>
    </table>
}

@functions {
    string querySearch;
    ItemSearchResult searchResult = new ItemSearchResult();

    protected async Task Search()
    {
        searchResult = await Http.GetJsonAsync<ItemSearchResult>($"https://api.mercadolibre.com/sites/MLB/search?q={querySearch}");
    }

    public class Item
    {
        public string id { get; set; }
        public string title { get; set; }
        public string site_id { get; set; }
        public string condition { get; set; }
        public decimal price { get; set; }
        public string permalink { get; set; }
    }

    public class ItemSearchResult
    {
        public ItemSearchResult() {
            results = new Item[0];
        }

        public Item[] results { get; set; }
    }
}
